name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    name: Test (Node ${{ matrix.node }})
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node: ['22.x', '23.x']

    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      mongodb:
        image: mongo:7
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand({ping: 1})'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node }}
        uses: actions/setup-node@v6
        with:
          node-version: ${{ matrix.node }}
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Type check
        run: yarn typecheck

      - name: Lint
        run: yarn lint

      - name: Build
        run: yarn build

      - name: Unit Tests
        run: yarn test

      - name: Integration Tests
        run: yarn test:integration
        env:
          REDIS_URL: redis://localhost:6379
          MONGO_URL: mongodb://localhost:27017

      - name: E2E Tests
        run: yarn test:e2e
        env:
          REDIS_URL: redis://localhost:6379
          MONGO_URL: mongodb://localhost:27017

      - name: Coverage
        run: yarn test:coverage
        if: matrix.node == '22.x'

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        if: matrix.node == '22.x'
        with:
          files: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

      - name: Security audit
        run: npm audit --production --audit-level=high
        continue-on-error: true

  lint-format:
    name: Lint & Format Check
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v6
        with:
          node-version: '22.x'
          cache: 'yarn'

      - run: yarn install --frozen-lockfile
      - run: yarn lint
      - run: yarn format:check
